Steps:

1. Define :
    1) 3 person - antidikoi lists that will hold the person info depending on the number of persons 
    2) A "String Dict"  : 
        1. Keys : Filenames  
        2. Values : Text content of each file 
    3) A pattern for searching the person info (ΚΑΤΑ... ΕΙΣΑΓΩΓΙΚΑ) which gets converted to string format    ( s_name = str(name) )
    4) A pattern for searching all valid dates in the file 
    5) A name and date list that will hold all the found results from the person info and valid date patterns   
    6) A pattern for splitting the person info by the substrings 'Του'|'Της'
        1. Specify the substrings to search -> 'Του,Της'
        2. Format them to a regex expression, that searches for both strings(using re.compile + join) in the main text
        3) Create a list comprehension that will get the indexes of the above substrings for each 
2. Get the word files with glob.os module from source dir  
3. Loop through every word file
    4. Convert every word file to pydocx-Document format                                                                                           (doc = Document(os.path.join(test_folder,file)))
    5. For every converted file get all the paragraphs text via a list comprehension                                                               (paragraph_text_list = [p.text for p in list(doc.paragraphs)])
    6. Get the text of the file as a single string via converting the paragraph text to string format                                              (s = ''.join(str(x) for x in  paragraph_text_list)      
    7. Apply the regex patterns for the person info, date and index position of the substrings 'Του'|'Της'
    8. Depending on the index list length (in other words, how many persons exist in each person info string) 
        1. Append splitted (if) found person info results , else append "-"
        2. If valid dates are found append the last date else append "-"
    9. Create a dataframe and pass the now filled 3 person lists as columns
